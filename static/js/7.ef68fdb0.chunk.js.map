{"version":3,"sources":["hoc/withAuthRedirect.js","content/dialogs/dialogs.jsx","content/dialogs/dialogsSelectors.js","content/dialogs/dialogsContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Dialogs","Message","className","name","text","Name","activeClassName","id","messageMap","messages","map","message","nameMap","names","SendMessageRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","data","textarea","trim","addMessage","reset","getMessages","dialogs","getNames","getAuth","DialogsContainer","mapDispatchToProps","compose"],"mappings":"2KAIMA,EAA0B,SAACC,GAChC,MAAO,CACNC,OAAQD,EAAME,KAAKA,OAiBNC,IAbU,SAACC,GAAe,IAClCC,EADiC,uKAGrC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAG,eAHN,GACPC,IAAML,WAStC,OAFsBM,YAAQX,EAARW,CAAiCL,K,qJC6CzCM,EA1DC,SAACJ,GAEhB,IAOMK,EAAU,SAACL,GAChB,OACC,yBAAKM,UAAU,oBACd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,iBAAiBN,EAAMO,OAEvC,yBAAKD,UAAU,iBAAiBN,EAAMQ,KAAK,kCAKxCC,EAAO,SAACT,GACb,OACC,4BAAI,kBAAC,IAAD,CAASM,UAAU,gBAAgBI,gBAAgB,kBAAkBT,GAAI,WAAaD,EAAMW,IAAI,0BAAML,UAAU,8BAAmC,8BAAON,EAAMO,SAIlKK,EAAaZ,EAAMa,SAASC,KAAI,SAACC,GAAD,OAAa,kBAACV,EAAD,CAASE,KAAMQ,EAAQR,KAAMC,KAAMO,EAAQP,UACxFQ,EAAUhB,EAAMiB,MAAMH,KAAI,SAACP,GAAD,OAAU,kBAACE,EAAD,CAAMF,KAAMA,EAAKA,KAAMI,GAAIJ,EAAKI,QAWlEO,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EATL,SAACnB,GACpB,OACC,0BAAMqB,SAAUrB,EAAMsB,aAAchB,UAAU,uBAC7C,kBAACiB,EAAA,EAAD,CAAOhB,KAAK,WAAWiB,UAAU,QAAQlB,UAAU,iBAAiBmB,YAAY,uBAChF,4BAAQnB,UAAU,iCAAlB,YAOH,OACC,yBAAKA,UAAU,WACd,yBAAKA,UAAU,qCACd,wBAAIA,UAAU,iBACZU,IAGH,yBAAKV,UAAU,mBACf,yBAAKA,UAAU,0BAA0BM,GACxC,kBAACM,EAAD,CAAkBG,SAAU,SAAAK,GAAI,OAhDlB,SAACA,GACU,IAAxBA,EAAKC,SAASC,SAChB5B,EAAM6B,WAAWH,EAAKC,UACtB3B,EAAM8B,MAAM,YA6CyBD,CAAWH,S,yCCvDtCK,EAAc,SAACtC,GAC3B,OAAOA,EAAMuC,QAAQnB,UAGToB,EAAW,SAACxC,GACxB,OAAOA,EAAMuC,QAAQf,OAGTiB,EAAU,SAACzC,GACvB,OAAOA,EAAME,KAAKA,MCAbwC,E,uKAEJ,OAAO,kBAAC,EAAYpC,KAAKC,W,GAFIE,IAAML,WAa/BuC,EAAqB,CAACP,eAAYC,WAEzBO,sBACdlC,aAXuB,SAACV,GACxB,MAAO,CACNoB,SAAUkB,EAAYtC,GACtBwB,MAAOgB,EAASxC,GAChBC,OAAQwC,EAAQzC,MAOQ2C,GACzBxC,IAFcyC,CAGbF","file":"static/js/7.ef68fdb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.auth,\r\n\t}\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender(){\r\n\t\t\tif(!this.props.isAuth) return <Redirect to='/login' />\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet connectRedirect = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n\treturn connectRedirect;\r\n}\r\n\r\nexport default withAuthRedirect;\r\n","import React from 'react';\r\nimport './dialogs.css';\r\nimport {Redirect, NavLink} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet addMessage = (data) => {\r\n\t\tif(data.textarea.trim() != ''){\r\n\t\t\tprops.addMessage(data.textarea);\r\n\t\t\tprops.reset('dialogs');\r\n\t\t}\r\n\t}\r\n\r\n\tconst Message = (props) => {\r\n\t\treturn(\r\n\t\t\t<div className=\"dialogs__message\">\r\n\t\t\t\t<div className=\"dialogs__avatar\">\r\n\t\t\t\t\t<div className=\"dialogs__photo avatar\"></div>\r\n\t\t\t\t\t<div className=\"dialogs__name\">{props.name}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"dialogs__text\">{props.text}<span></span></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Name = (props) => {\r\n\t\treturn(\r\n\t\t\t<li><NavLink className='dialogs__link' activeClassName=\"dialogs__active\" to={\"dialogs/\" + props.id}><span className=\"dialogs__photoName avatar\"></span><span>{props.name}</span></NavLink></li>\r\n\t\t);\r\n\t};\r\n\r\n\tlet messageMap = props.messages.map((message) => <Message name={message.name} text={message.text} />);\r\n\tlet nameMap = props.names.map((name) => <Name name={name.name} id={name.id} />);\r\n\r\n\tconst SendMessage = (props) => {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={props.handleSubmit} className=\"dialog__sendMessage\">\r\n\t\t\t\t<Field name=\"textarea\" component=\"input\" className=\"dialogs__input\" placeholder=\"Enter a message...\" />\r\n\t\t\t\t<button className=\"posts__button dialogs__button\" >Send</button>\r\n\t\t\t</form>\r\n\t\t)\r\n}\r\n\t\r\n\tconst SendMessageRedux = reduxForm({form: 'dialogs'})(SendMessage);\r\n\r\n\treturn(\r\n\t\t<div className=\"dialogs\">\r\n\t\t\t<div className=\"dialogs__column dialogs__column-f\">\r\n\t\t\t\t<ul className=\"dialogs__list\">\r\n\t\t\t\t\t{nameMap}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dialogs__column\">\r\n\t\t\t<div className=\"dialogs__messageWindow\">{messageMap}</div>\r\n\t\t\t\t<SendMessageRedux onSubmit={data => addMessage(data)} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","export const getMessages = (state) => {\r\n\treturn state.dialogs.messages;\r\n}\r\n\r\nexport const getNames = (state) => {\r\n\treturn state.dialogs.names;\r\n}\r\n\r\nexport const getAuth = (state) => {\r\n\treturn state.auth.auth;\r\n}\r\n","import React from 'react';\r\nimport Dialogs from './dialogs.jsx';\r\nimport {addMessage} from '../../redux/dialogsReducer.js';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect.js';\r\nimport {reset} from 'redux-form';\r\nimport {getMessages, getNames, getAuth} from './dialogsSelectors.js';\r\n\r\nclass DialogsContainer extends React.Component{\r\n\trender(){\r\n\t\treturn <Dialogs {...this.props} />\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmessages: getMessages(state),\r\n\t\tnames: getNames(state),\r\n\t\tisAuth: getAuth(state),\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {addMessage, reset};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect,\r\n)(DialogsContainer);"],"sourceRoot":""}