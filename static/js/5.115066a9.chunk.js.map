{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","tools/forms.jsx","tools/validation.js","content/login/login.jsx","content/login/loginSelectors.js","content/login/loginContainer.jsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Input","input","meta","props","className","touched","error","didTouch","value","reduxForm","form","onSubmit","handleSubmit","Field","name","type","component","validate","placeholder","captcha","captchaFocus","src","captchaUrl","autocomplete","onFocus","captchaFocusChange","onBlur","htmlFor","getCapthcaUrl","state","auth","getCaptcha","getId","id","getAuth","loginContainer","setState","this","isAuth","to","data","loginThunk","email","password","remember","reset","React","Component","mapDispatchToProps","compose","connect"],"mappings":"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","file":"static/js/5.115066a9.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport './forms.css';\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\treturn (\r\n\t\t<div className={\"form__input\" + ' ' + (meta.touched && meta.error ? 'error' : '')}>\r\n\t\t\t<input {...input} {...props} />\r\n\t\t\t<span>{meta.error}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","export const didTouch = (value) => {\r\n\tif(!value) return 'Field is required';\r\n\treturn undefined;\r\n}\r\n\r\nexport const maxLength = (length) => (value) => {\r\n\tif(value.length > length) return `Max length is ${length}`;\r\n\treturn undefined;\r\n}\r\n\r\nexport const minLength = (length) => (value) => {\r\n\tif(value.length < length) return `Min length is ${length}`;\r\n\treturn undefined;\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport './login.css';\r\nimport {Input} from '../../tools/forms.jsx';\r\nimport {didTouch} from '../../tools/validation.js';\r\n\r\nconst Login = (props) => {\r\n\treturn (\r\n\t\t<div className=\"login__block\">\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<div className=\"login__login\">\r\n\t\t\t\t\t<Field name=\"email\" type=\"email\" component={Input} validate={[didTouch]} placeholder=\"email\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__password\">\r\n\t\t\t\t\t<Field name=\"password\" type=\"password\" component={Input}  validate={[didTouch]} placeholder=\"password\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t{props.captcha && <div className=\"login__captcha\">\r\n\t\t\t\t\t<div className={\"login__captcha--bg\" + ' ' + (props.captchaFocus ? 'active' : '')}><img src={props.captchaUrl} /></div>\r\n\t\t\t\t\t<div className=\"login__captcha--field\"><Field name=\"captcha\" type=\"text\" component={Input} autocomplete=\"off\" placeholder=\"code\" onFocus={() => props.captchaFocusChange(true)} onBlur={() => props.captchaFocusChange(false)} /></div>\r\n\t\t\t\t</div>}\r\n\t\t\t\t<div className=\"login__remember\">\r\n\t\t\t\t\t<Field name=\"remember\" type=\"checkbox\" component=\"input\" />\r\n\t\t\t\t\t<label htmlFor=\"remember\" >Remember me</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t{props.error && \r\n\t\t\t\t<div className=\"login__custom\">\r\n\t\t\t\t\t{props.error}\r\n\t\t\t\t</div>}\r\n\t\t\t\t<div className=\"login__btn\">\r\n\t\t\t\t\t<button>Sign in</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(Login);","export const getCapthcaUrl = (state) => {\r\n\treturn state.auth.captchaUrl;\r\n}\r\n\r\nexport const getCaptcha = (state) => {\r\n\treturn state.auth.captcha;\r\n}\r\n\r\nexport const getId = (state) => {\r\n\treturn state.auth.id;\r\n}\r\n\r\nexport const getAuth = (state) => {\r\n\treturn state.auth.auth;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport Login from './login.jsx';\r\nimport {loginThunk} from '../../redux/authReducer.js';\r\nimport {reset} from 'redux-form';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {getCapthcaUrl,getCaptcha,getId,getAuth} from './loginSelectors.js';\r\n\r\nclass loginContainer extends React.Component{\r\n\r\n\tstate = {\r\n\t\tcaptchaFocus: false,\r\n\t}\r\n\r\n\tcaptchaFocusChange = (value) => {\r\n\t\tthis.setState({\r\n\t\t\tcaptchaFocus: value,\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.props.isAuth) return <Redirect to={'/profile/' + this.props.id} />\r\n\t\treturn <Login {...this.state} captchaFocusChange={this.captchaFocusChange} onSubmit={(data) => {this.props.loginThunk(data.email, data.password, data.remember, data.captcha); this.props.reset('login')}} {...this.props} />\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: getAuth(state),\r\n\t\tid: getId(state),\r\n\t\tcaptcha: getCaptcha(state),\r\n\t\tcaptchaUrl: getCapthcaUrl(state),\r\n\t};\r\n}\r\nconst mapDispatchToProps = {loginThunk, reset};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n)(loginContainer);\r\n\r\n"],"sourceRoot":""}